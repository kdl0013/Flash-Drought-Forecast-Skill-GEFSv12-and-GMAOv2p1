#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
I received 5 new dates for ESRL FIMr1p1. They are already pre-processed,
just change the names and move the files.

@author: kdl
"""

import xarray as xr
import numpy as np
import os
from glob import glob
import pandas as pd
import datetime as dt

dir1 = '/home/kdl/Insync/OneDrive/NRT_CPC_Internship'
# mod='RSMAS'
subX_dir = f'{dir1}/Data/SubX/ESRL/from_ESRL_agency_missing_days/keep_variables'
out_dir = f'{dir1}/Data/SubX/ESRL'

os.chdir(subX_dir)

#get file list
file_list_tas = sorted(glob('tas*.nc'))

def change_date(file):
    date_ = file.split('_')[3]
    str(pd.to_datetime(date_).year) + '-' +  str(pd.to_datetime(date_).month) + '-' +  str(pd.to_datetime(date_).day)
#open file, resave elsewhere
for file in file_list_tas:
    open_f=xr.open_dataset(file)
    
    out_name = 
    

#%%
'''Apparently for RSMAS, there are different days of the week that are initialized,
so let us figure out what day of the week each day is initialized'''



dow=[]
for file in sorted(glob('mrso*.nc4')):
    # day_week = file
    dow.append(pd.to_datetime(file.split('.')[0][-10:]).dayofweek)
    
dow[0:100]


'''Yes there are different initialization days for each model.

The solution will be to only keep the file if the S date (within the opened file) is the exact same
as the file date

From manual inspection, the S date is specific to the actual intialization date.

IMPORTANT. The S date is actually file init date. Make sure the file S[1] dim 
is the same as the file name

'''

#First remove the files that aren't good
for file in sorted(glob('*RSMAS*.nc4')):
    open_f = xr.open_dataset(file)
    open_f.close()
    if open_f.S.values[1] == np.datetime64(file.split('.')[0].split('_')[-1]):
        pass
    else:
        os.system(f'rm {file}')

'''All files already have values, this was completed in CASPER cluster and 
The script is in the NCAR_sciprts directory'''

#%%
#Then rename to .nc in accordance with other Subx files
for file in sorted(glob('*RSMAS*.nc4')):
    file_new=file[0:-1]
    os.system(f'mv {file} {file_new}')

